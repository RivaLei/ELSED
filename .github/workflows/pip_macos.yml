name: Python macOS

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-12]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache opencv
        uses: actions/cache@v3
        env:
          cache-name: cache-opencv
        with:
          path: |
            ./opencv
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install prerequisites
        shell: bash -l {0}
        run: |
          brew install create-dmg
          if [ ! -d "./opencv" ]; then
            ruby - e  "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null  2 > /dev/null
            brew install --build-from-source cmake
            git clone https://github.com/opencv/opencv.git --branch 4.1.1 --depth 1
            cmake -S opencv -B opencv/build -D ENABLE_PRECOMPILED_HEADERS=OFF -D WITH_MSMF=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D BUILD_WITH_DEBUG_INFO=OFF -D BUILD_DOCS=OFF -D WITH_JPEG=OFF -D WITH_FFMPEG=OFF -D CMAKE_BUILD_TYPE=RELEASE
            cd ./opencv/build
            make
          else
            cd ./opencv/build
          fi
          sudo make install
      - name: Install python dependencies
        run: |
          ls
          mkdir build && cd build && cmake .. && make
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build python package
        run: pip install .
      - name: Test with pytest
        run: |
          pytest -v pytests/tests.py --junitxml=test-reports/report.xml